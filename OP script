-- Services
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Create main GUI elements
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "TapSimulatorGUI"
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 300, 0, 400)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

-- Round the corners
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = MainFrame

-- Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Size = UDim2.new(1, 0, 0, 40)
TitleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame

local TitleCorner = UICorner:Clone()
TitleCorner.Parent = TitleBar

-- Title Text
local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(1, -40, 1, 0)
Title.Position = UDim2.new(0, 10, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "Tap Simulator"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 18
Title.Font = Enum.Font.GothamBold
Title.Parent = TitleBar

-- Close Button
local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -35, 0, 5)
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
CloseButton.Text = "Ã—"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 20
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Parent = TitleBar

local CloseCorner = UICorner:Clone()
CloseCorner.CornerRadius = UDim.new(0, 8)
CloseCorner.Parent = CloseButton

-- Content Frame
local ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Size = UDim2.new(1, -20, 1, -60)
ContentFrame.Position = UDim2.new(0, 10, 0, 50)
ContentFrame.BackgroundTransparency = 1
ContentFrame.Parent = MainFrame

-- Toggle Button
local function CreateToggleButton(text, position)
    local ToggleFrame = Instance.new("Frame")
    ToggleFrame.Size = UDim2.new(1, 0, 0, 40)
    ToggleFrame.Position = position
    ToggleFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 50)
    ToggleFrame.Parent = ContentFrame
    
    local ToggleCorner = UICorner:Clone()
    ToggleCorner.Parent = ToggleFrame
    
    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Size = UDim2.new(0, 50, 0, 24)
    ToggleButton.Position = UDim2.new(1, -60, 0.5, -12)
    ToggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
    ToggleButton.Text = ""
    ToggleButton.Parent = ToggleFrame
    
    local ToggleButtonCorner = UICorner:Clone()
    ToggleButtonCorner.CornerRadius = UDim.new(0, 12)
    ToggleButtonCorner.Parent = ToggleButton
    
    local ToggleCircle = Instance.new("Frame")
    ToggleCircle.Size = UDim2.new(0, 20, 0, 20)
    ToggleCircle.Position = UDim2.new(0, 2, 0.5, -10)
    ToggleCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ToggleCircle.Parent = ToggleButton
    
    local ToggleCircleCorner = UICorner:Clone()
    ToggleCircleCorner.CornerRadius = UDim.new(1, 0)
    ToggleCircleCorner.Parent = ToggleCircle
    
    local Label = Instance.new("TextLabel")
    Label.Size = UDim2.new(1, -120, 1, 0)
    Label.Position = UDim2.new(0, 10, 0, 0)
    Label.BackgroundTransparency = 1
    Label.Text = text
    Label.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label.TextSize = 16
    Label.Font = Enum.Font.Gotham
    Label.TextXAlignment = Enum.TextXAlignment.Left
    Label.Parent = ToggleFrame
    
    return ToggleButton, ToggleCircle
end

-- Create toggle buttons
local AutoTapButton, AutoTapCircle = CreateToggleButton("Auto Tap", UDim2.new(0, 0, 0, 0))
local AutoRebirthButton, AutoRebirthCircle = CreateToggleButton("Auto Rebirth", UDim2.new(0, 0, 0, 50))
local AutoUpgradeButton, AutoUpgradeCircle = CreateToggleButton("Auto Upgrade", UDim2.new(0, 0, 0, 100))

-- Toggle states
local toggleStates = {
    AutoTap = false,
    AutoRebirth = false,
    AutoUpgrade = false
}

-- Animation function for toggle
local function AnimateToggle(button, circle, enabled)
    local goalPosition = enabled and UDim2.new(1, -22, 0.5, -10) or UDim2.new(0, 2, 0.5, -10)
    local goalColor = enabled and Color3.fromRGB(0, 255, 128) or Color3.fromRGB(60, 60, 65)
    
    local circleTween = TweenService:Create(circle, TweenInfo.new(0.2), {Position = goalPosition})
    local colorTween = TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = goalColor})
    
    circleTween:Play()
    colorTween:Play()
end

-- Make frame draggable
local dragging
local dragInput
local dragStart
local startPos

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
    end
end)

TitleBar.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if dragging and dragInput then
        local delta = dragInput.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Close button functionality
CloseButton.MouseButton1Click:Connect(function()
    toggleStates.AutoTap = false
    toggleStates.AutoRebirth = false
    toggleStates.AutoUpgrade = false
    ScreenGui:Destroy()
end)

-- Button click handlers
AutoTapButton.MouseButton1Click:Connect(function()
    toggleStates.AutoTap = not toggleStates.AutoTap
    AnimateToggle(AutoTapButton, AutoTapCircle, toggleStates.AutoTap)
end)

AutoRebirthButton.MouseButton1Click:Connect(function()
    toggleStates.AutoRebirth = not toggleStates.AutoRebirth
    AnimateToggle(AutoRebirthButton, AutoRebirthCircle, toggleStates.AutoRebirth)
end)

AutoUpgradeButton.MouseButton1Click:Connect(function()
    toggleStates.AutoUpgrade = not toggleStates.AutoUpgrade
    AnimateToggle(AutoUpgradeButton, AutoUpgradeCircle, toggleStates.AutoUpgrade)
end)

-- Main loop
spawn(function()
    while wait() do
        if toggleStates.AutoTap then
            local tapArgs = {[1] = true}
            ReplicatedStorage.Tap:InvokeServer(unpack(tapArgs))
        end
        
        if toggleStates.AutoRebirth then
            local rebirthArgs = {[1] = 5}
            ReplicatedStorage.Rebirth:FireServer(unpack(rebirthArgs))
        end
        
        if toggleStates.AutoUpgrade then
            local upgrades = {"More Gems", "More Taps", "Luck"}
            for _, upgradeType in ipairs(upgrades) do
                local upgradeArgs = {[1] = upgradeType}
                ReplicatedStorage.Upgrade:InvokeServer(unpack(upgradeArgs))
            end
        end
    end
end)
