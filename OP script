local UserInputService = game:GetService("UserInputService")

-- Create main GUI
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local Title = Instance.new("TextLabel")

-- GUI Properties
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false -- Prevent GUI from disappearing when player respawns

MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
MainFrame.Position = UDim2.new(0.1, 0, 0.1, 0)
MainFrame.Size = UDim2.new(0, 200, 0, 250)
MainFrame.Active = true

-- Add Corner UI
local UICorner = Instance.new("UICorner")
UICorner.Parent = MainFrame
UICorner.CornerRadius = UDim.new(0, 10)

Title.Name = "Title"
Title.Parent = MainFrame
Title.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Title.Size = UDim2.new(1, 0, 0, 30)
Title.Font = Enum.Font.SourceSansBold
Title.Text = "Auto Farm Menu"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 16.000

-- Add Corner UI for Title
local TitleCorner = Instance.new("UICorner")
TitleCorner.Parent = Title
TitleCorner.CornerRadius = UDim.new(0, 10)

-- Dragging functionality
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

Title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Title.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Function to create buttons
local function CreateButton(name, pos, parent)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Parent = parent
    button.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
    button.Position = UDim2.new(0.1, 0, pos, 0)
    button.Size = UDim2.new(0.8, 0, 0, 30)
    button.Font = Enum.Font.SourceSans
    button.Text = name
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 14.000
    
    -- Add Corner UI for buttons
    local ButtonCorner = Instance.new("UICorner")
    ButtonCorner.Parent = button
    ButtonCorner.CornerRadius = UDim.new(0, 6)
    
    local enabled = false
    local connection
    
    button.MouseButton1Click:Connect(function()
        enabled = not enabled
        button.BackgroundColor3 = enabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(55, 55, 55)
        
        if enabled then
            if name == "Auto Tap" then
                connection = game:GetService("RunService").Heartbeat:Connect(function()
                    local args = {[1] = true}
                    game:GetService("ReplicatedStorage").Tap:InvokeServer(unpack(args))
                end)
            elseif name == "Auto Rebirth" then
                connection = game:GetService("RunService").Heartbeat:Connect(function()
                    local args = {[1] = 100000}
                    game:GetService("ReplicatedStorage").Rebirth:FireServer(unpack(args))
                end)
            elseif name == "Auto More Gems" then
                connection = game:GetService("RunService").Heartbeat:Connect(function()
                    local args = {[1] = "More Gems"}
                    game:GetService("ReplicatedStorage").Upgrade:InvokeServer(unpack(args))
                end)
            elseif name == "Auto More Taps" then
                connection = game:GetService("RunService").Heartbeat:Connect(function()
                    local args = {[1] = "More Taps"}
                    game:GetService("ReplicatedStorage").Upgrade:InvokeServer(unpack(args))
                end)
            elseif name == "Auto Luck" then
                connection = game:GetService("RunService").Heartbeat:Connect(function()
                    local args = {[1] = "Luck"}
                    game:GetService("ReplicatedStorage").Upgrade:InvokeServer(unpack(args))
                end)
            end
        else
            if connection then
                connection:Disconnect()
                connection = nil
            end
        end
    end)
    
    return button
end

-- Create all buttons
CreateButton("Auto Tap", 0.2, MainFrame)
CreateButton("Auto Rebirth", 0.35, MainFrame)
CreateButton("Auto More Gems", 0.5, MainFrame)
CreateButton("Auto More Taps", 0.65, MainFrame)
CreateButton("Auto Luck", 0.8, MainFrame)

-- Notification
local function SendNotification(message)
    game.StarterGui:SetCore("SendNotification", {
        Title = "Auto Farm",
        Text = message,
        Duration = 3
    })
end

SendNotification("GUI Loaded! Click buttons to toggle functions.")
